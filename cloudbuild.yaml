steps:
  # Step 1: Ensure Artifact Registry exists
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe amjad-artifact-cloudrun --location=asia-east1 --project=enhub-cloud-interns; then
          echo "Repository doesn't exist. Creating now."
          gcloud artifacts repositories create amjad-artifact-cloudrun \
            --repository-format=docker \
            --location=asia-east1 \
            --project=enhub-cloud-interns
        else
          echo "Repository already exists."
        fi

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-artifact-cloudrun/amjad-image:latest',
        '.'
      ]

  # Step 3: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-artifact-cloudrun/amjad-image:latest'
      ]

  # Step 4: Apply Cloud Deploy pipeline and target config
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'deploy', 'apply',
        '--file=clouddeploy.yaml',
        '--region=asia-east1',
        '--project=enhub-cloud-interns'
      ]
    id: apply-deploy-config

  # Step 5: Create dynamic release name and store in file
  - name: 'gcr.io/cloud-builders/gcloud'
    id: set-release-name
    entrypoint: bash
    args:
      - '-c'
      - |
        RELEASE_NAME="amjad-release-$(date +%Y%m%d%H%M%S)"
        echo "RELEASE_NAME=$RELEASE_NAME" >> /workspace/env.txt

  # Step 6: Create release
  - name: 'gcr.io/cloud-builders/gcloud'
    id: create-release
    entrypoint: bash
    args:
      - '-c'
      - |
        source /workspace/env.txt
        gcloud deploy releases create "$RELEASE_NAME" \
          --project=enhub-cloud-interns \
          --region=asia-east1 \
          --delivery-pipeline=amjad-pipeline \
          --images=amjad-image=asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-artifact-cloudrun/amjad-image:latest
    waitFor: ['apply-deploy-config', 'set-release-name']

  # Step 7: Create rollout
  - name: 'gcr.io/cloud-builders/gcloud'
    id: create-rollout
    entrypoint: bash
    args:
      - '-c'
      - |
        source /workspace/env.txt
        gcloud deploy rollouts advance \
          --release="$RELEASE_NAME" \
          --region=asia-east1 \
          --project=enhub-cloud-interns \
          --delivery-pipeline=amjad-pipeline
    waitFor: ['create-release']

  # Step 8: Approve rollout
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        source /workspace/env.txt
        ROLLOUT_ID=$(gcloud deploy rollouts list \
          --region=asia-east1 \
          --project=enhub-cloud-interns \
          --delivery-pipeline=amjad-pipeline \
          --release="$RELEASE_NAME" \
          --format="value(rolloutId)")
        echo "Approving rollout $ROLLOUT_ID"
        gcloud deploy rollouts approve "$ROLLOUT_ID" \
          --region=asia-east1 \
          --project=enhub-cloud-interns
    waitFor: ['create-rollout']

images:
  - 'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-artifact-cloudrun/amjad-image:latest'

options:
  logging: CLOUD_LOGGING_ONLY

serviceAccount: 1064351983714-compute@developer.gserviceaccount.com
