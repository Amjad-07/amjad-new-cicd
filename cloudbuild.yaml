steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-repo/amjad-image:$COMMIT_SHA', '.']

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-repo/amjad-image:$COMMIT_SHA']

  # Step 3: Deploy to Cloud Run via Cloud Deploy (generate release name with timestamp)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        RELEASE_NAME="amjad-release-$(date +%Y%m%d%H%M%S)"
        echo "$RELEASE_NAME" > /workspace/release_name.txt
        gcloud deploy releases create "$RELEASE_NAME" \
          --delivery-pipeline=amjad-pipeline \
          --region=asia-east1 \
          --images=amjad-image=asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-repo/amjad-image:$COMMIT_SHA \
          --project=enhub-cloud-interns
    id: create-release

  # Step 4: Create Rollout manually (instead of advancing)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        RELEASE_NAME=$$(cat /workspace/release_name.txt)
        echo "Creating rollout for release: $$RELEASE_NAME"
        gcloud deploy rollouts create "rollout-$$RELEASE_NAME" \
          --release="$$RELEASE_NAME" \
          --region=asia-east1 \
          --project=enhub-cloud-interns \
          --delivery-pipeline=amjad-pipeline
    id: create-rollout
    waitFor: ['create-release']

images:
  - 'asia-east1-docker.pkg.dev/enhub-cloud-interns/amjad-repo/amjad-image:$COMMIT_SHA'
