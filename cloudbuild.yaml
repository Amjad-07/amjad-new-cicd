substitutions:
  _PIPELINE_NAME: 'my-python-app-pipeline'
  _TARGET_NAME: 'my-cloud-run-target'
  _REGION: 'us-central1'
  _PROJECT_ID: 'enhub-cloud-interns'  # Your project ID
  _RELEASE_NAME: 'my-python-app-release'
  _IMAGE_PATH: 'gcr.io/$(PROJECT_ID)/my-python-app'

steps:
  # Step 1: Apply the Delivery Pipeline and Target
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    id: 'Apply Pipeline and Target'
    args:
      - 'gcloud'
      - 'deploy'
      - 'apply'
      - '--file=clouddeploy.yaml'
      - '--region=$$_REGION'
      - '--project=$(PROJECT_ID)'

  # Step 2: Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$$_IMAGE_PATH', '.']

  # Step 3: Push Docker Image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$$_IMAGE_PATH']

  # Step 4: Create a Release in Cloud Deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    args:
      - 'gcloud'
      - 'deploy'
      - 'releases'
      - 'create'
      - '$$_RELEASE_NAME'
      - '--images=my-python-app=$$_IMAGE_PATH'
      - '--delivery-pipeline=$$_PIPELINE_NAME'
      - '--region=$$_REGION'
      - '--project=$(PROJECT_ID)'

  # Step 5: Trigger the Rollout in Cloud Deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    args:
      - 'gcloud'
      - 'deploy'
      - 'rollouts'
      - 'create'
      - '--release=$$_RELEASE_NAME'
      - '--delivery-pipeline=$$_PIPELINE_NAME'
      - '--region=$$_REGION'
      - '--project=$(PROJECT_ID)'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: "1200s"
