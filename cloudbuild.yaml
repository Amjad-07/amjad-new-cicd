steps:
  # Step 1: Check and Create Cloud Deploy Target (Cloud Run)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    id: 'Check and Create Target'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        TARGET_NAME="my-cloud-run-target"
        REGION="us-central1"
        PROJECT="enhub-cloud-interns"

        if ! gcloud deploy targets describe $TARGET_NAME --region=$REGION --project=$PROJECT 2>/dev/null; then
          echo "Target does not exist. Creating target..."
          gcloud deploy targets create $TARGET_NAME \
            --region=$REGION \
            --run-location=$REGION \
            --project=$PROJECT
        else
          echo "Target $TARGET_NAME already exists."
        fi

  # Step 2: Apply Delivery Pipeline Configuration (pipeline.yaml)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    id: 'Apply Pipeline'
    args:
      [
        'gcloud', 'deploy', 'apply',
        '--file=pipeline.yaml',
        '--region=us-central1',
        '--project=enhub-cloud-interns'
      ]

  # Step 3: Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/enhub-cloud-interns/my-python-app', '.']

  # Step 4: Push Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/enhub-cloud-interns/my-python-app']

  # Step 5: Create a Release in Cloud Deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    args:
      - 'gcloud'
      - 'deploy'
      - 'releases'
      - 'create'
      - 'my-python-app-release'
      - '--images=gcr.io/enhub-cloud-interns/my-python-app=gcr.io/enhub-cloud-interns/my-python-app'
      - '--delivery-pipeline=my-python-app-pipeline'
      - '--region=us-central1'

  # Step 6: Trigger the Rollout
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    args:
      - 'gcloud'
      - 'deploy'
      - 'rollouts'
      - 'create'
      - '--release=my-python-app-release'
      - '--delivery-pipeline=my-python-app-pipeline'
      - '--region=us-central1'

options:
  logging: CLOUD_LOGGING_ONLY
timeout: "1200s"
